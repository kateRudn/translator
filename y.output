Terminals unused in grammar

   OR_OP


Grammar

    0 $accept: statements $end

    1 statements: %empty
    2           | statements statement

    3 statement: expression_statement
    4          | selection_statement
    5          | iteration_statement
    6          | compound_statement
    7          | return_statement
    8          | print_statement

    9 assignment_operator: ASSIGN
   10                    | MUL_ASSIGN
   11                    | DIV_ASSIGN
   12                    | MOD_ASSIGN
   13                    | ADD_ASSIGN
   14                    | SUB_ASSIGN
   15                    | AND_ASSIGN
   16                    | XOR_ASSIGN
   17                    | OR_ASSIGN
   18                    | RIGHT_ASSIGN
   19                    | LEFT_ASSIGN

   20 unary_expression: IDENTIFIER
   21                 | INC IDENTIFIER
   22                 | DEC IDENTIFIER

   23 assignment_expression: unary_expression assignment_operator assignment_expression
   24                      | unary_expression assignment_operator expr

   25 expr: L_SK expr R_SK
   26     | expr ADD expr
   27     | expr SUB expr
   28     | expr MUL expr
   29     | expr DIV expr
   30     | expr MOD expr
   31     | SUB expr
   32     | expr XOR expr
   33     | expr OR expr
   34     | expr AND expr
   35     | expr SHL expr
   36     | expr SHR expr
   37     | NOT expr
   38     | expr AND_OP expr
   39     | expr LE_OP expr
   40     | expr GE_OP expr
   41     | expr LE_OP_ expr
   42     | expr GE_OP_ expr
   43     | expr EQ_OP expr
   44     | expr NE_OP expr
   45     | unary_expression
   46     | CONST
   47     | IDENTIFIER INC
   48     | IDENTIFIER DEC

   49 expression: expr
   50           | assignment_expression

   51 expression_statement: ';'
   52                     | expression ';'
   53                     | expression ',' expression_statement

   54 $@1: %empty

   55 selection_statement: IF L_SK expression R_SK $@1 slc_stmnt

   56 slc_stmnt: statement

   57 $@2: %empty

   58 slc_stmnt: statement ELSE $@2 statement

   59 $@3: %empty

   60 $@4: %empty

   61 $@5: %empty

   62 iteration_statement: $@3 WHILE $@4 L_SK expression $@5 R_SK statement

   63 print_statement: PRINT expression ';'

   64 compound_statement: '{' '}'
   65                   | '{' statement_list '}'

   66 statement_list: statement
   67               | statement_list statement

   68 return_statement: RETURN ';'
   69                 | RETURN expression ';'


Terminals, with rules where they appear

$end (0) 0
',' (44) 53
';' (59) 51 52 63 68 69
'{' (123) 64 65
'}' (125) 64 65
error (256)
IDENTIFIER (258) 20 21 22 47 48
CONST (259) 46
AND (260) 34
OR (261) 33
XOR (262) 32
MUL (263) 28
DIV (264) 29
ADD (265) 26
SUB (266) 27 31
MOD (267) 30
INC (268) 21 47
DEC (269) 22 48
AND_OP (270) 38
OR_OP (271)
LE_OP (272) 39
GE_OP (273) 40
LE_OP_ (274) 41
GE_OP_ (275) 42
EQ_OP (276) 43
NE_OP (277) 44
SHR (278) 36
SHL (279) 35
ASSIGN (280) 9
SUB_ASSIGN (281) 14
AND_ASSIGN (282) 15
MUL_ASSIGN (283) 10
DIV_ASSIGN (284) 11
MOD_ASSIGN (285) 12
ADD_ASSIGN (286) 13
XOR_ASSIGN (287) 16
OR_ASSIGN (288) 17
RIGHT_ASSIGN (289) 18
LEFT_ASSIGN (290) 19
IF (291) 55
ELSE (292) 58
WHILE (293) 62
RETURN (294) 68 69
PRINT (295) 63
R_SK (296) 25 55 62
L_SK (297) 25 55 62
UMINUS (298)
NOT (299) 37
LOWER_THAN_ELSE (300)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
statements (51)
    on left: 1 2, on right: 0 2
statement (52)
    on left: 3 4 5 6 7 8, on right: 2 56 58 62 66 67
assignment_operator (53)
    on left: 9 10 11 12 13 14 15 16 17 18 19, on right: 23 24
unary_expression (54)
    on left: 20 21 22, on right: 23 24 45
assignment_expression (55)
    on left: 23 24, on right: 23 50
expr (56)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 48, on right: 24 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 39 40 41 42 43 44 49
expression (57)
    on left: 49 50, on right: 52 53 55 62 63 69
expression_statement (58)
    on left: 51 52 53, on right: 3 53
selection_statement (59)
    on left: 55, on right: 4
$@1 (60)
    on left: 54, on right: 55
slc_stmnt (61)
    on left: 56 58, on right: 55
$@2 (62)
    on left: 57, on right: 58
iteration_statement (63)
    on left: 62, on right: 5
$@3 (64)
    on left: 59, on right: 62
$@4 (65)
    on left: 60, on right: 62
$@5 (66)
    on left: 61, on right: 62
print_statement (67)
    on left: 63, on right: 8
compound_statement (68)
    on left: 64 65, on right: 6
statement_list (69)
    on left: 66 67, on right: 65 67
return_statement (70)
    on left: 68 69, on right: 7


State 0

    0 $accept: . statements $end

    $default  reduce using rule 1 (statements)

    statements  go to state 1


State 1

    0 $accept: statements . $end
    2 statements: statements . statement

    $end        shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    $default  reduce using rule 59 ($@3)

    statement              go to state 15
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    return_statement       go to state 26


State 2

    0 $accept: statements $end .

    $default  accept


State 3

   20 unary_expression: IDENTIFIER .
   47 expr: IDENTIFIER . INC
   48     | IDENTIFIER . DEC

    INC  shift, and go to state 27
    DEC  shift, and go to state 28

    $default  reduce using rule 20 (unary_expression)


State 4

   46 expr: CONST .

    $default  reduce using rule 46 (expr)


State 5

   31 expr: SUB . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 30


State 6

   21 unary_expression: INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 31


State 7

   22 unary_expression: DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 8

   55 selection_statement: IF . L_SK expression R_SK $@1 slc_stmnt

    L_SK  shift, and go to state 33


State 9

   68 return_statement: RETURN . ';'
   69                 | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 34

    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 35


State 10

   63 print_statement: PRINT . expression ';'

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 36


State 11

   25 expr: L_SK . expr R_SK

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 37


State 12

   37 expr: NOT . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 38


State 13

   51 expression_statement: ';' .

    $default  reduce using rule 51 (expression_statement)


State 14

   64 compound_statement: '{' . '}'
   65                   | '{' . statement_list '}'

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14
    '}'         shift, and go to state 39

    $default  reduce using rule 59 ($@3)

    statement              go to state 40
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    statement_list         go to state 41
    return_statement       go to state 26


State 15

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


State 16

   23 assignment_expression: unary_expression . assignment_operator assignment_expression
   24                      | unary_expression . assignment_operator expr
   45 expr: unary_expression .

    ASSIGN        shift, and go to state 42
    SUB_ASSIGN    shift, and go to state 43
    AND_ASSIGN    shift, and go to state 44
    MUL_ASSIGN    shift, and go to state 45
    DIV_ASSIGN    shift, and go to state 46
    MOD_ASSIGN    shift, and go to state 47
    ADD_ASSIGN    shift, and go to state 48
    XOR_ASSIGN    shift, and go to state 49
    OR_ASSIGN     shift, and go to state 50
    RIGHT_ASSIGN  shift, and go to state 51
    LEFT_ASSIGN   shift, and go to state 52

    $default  reduce using rule 45 (expr)

    assignment_operator  go to state 53


State 17

   50 expression: assignment_expression .

    $default  reduce using rule 50 (expression)


State 18

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr
   49 expression: expr .

    AND     shift, and go to state 54
    OR      shift, and go to state 55
    XOR     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    AND_OP  shift, and go to state 62
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 49 (expression)


State 19

   52 expression_statement: expression . ';'
   53                     | expression . ',' expression_statement

    ';'  shift, and go to state 71
    ','  shift, and go to state 72


State 20

    3 statement: expression_statement .

    $default  reduce using rule 3 (statement)


State 21

    4 statement: selection_statement .

    $default  reduce using rule 4 (statement)


State 22

    5 statement: iteration_statement .

    $default  reduce using rule 5 (statement)


State 23

   62 iteration_statement: $@3 . WHILE $@4 L_SK expression $@5 R_SK statement

    WHILE  shift, and go to state 73


State 24

    8 statement: print_statement .

    $default  reduce using rule 8 (statement)


State 25

    6 statement: compound_statement .

    $default  reduce using rule 6 (statement)


State 26

    7 statement: return_statement .

    $default  reduce using rule 7 (statement)


State 27

   47 expr: IDENTIFIER INC .

    $default  reduce using rule 47 (expr)


State 28

   48 expr: IDENTIFIER DEC .

    $default  reduce using rule 48 (expr)


State 29

   45 expr: unary_expression .

    $default  reduce using rule 45 (expr)


State 30

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   31     | SUB expr .
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    $default  reduce using rule 31 (expr)


State 31

   21 unary_expression: INC IDENTIFIER .

    $default  reduce using rule 21 (unary_expression)


State 32

   22 unary_expression: DEC IDENTIFIER .

    $default  reduce using rule 22 (unary_expression)


State 33

   55 selection_statement: IF L_SK . expression R_SK $@1 slc_stmnt

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 74


State 34

   68 return_statement: RETURN ';' .

    $default  reduce using rule 68 (return_statement)


State 35

   69 return_statement: RETURN expression . ';'

    ';'  shift, and go to state 75


State 36

   63 print_statement: PRINT expression . ';'

    ';'  shift, and go to state 76


State 37

   25 expr: L_SK expr . R_SK
   26     | expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    AND     shift, and go to state 54
    OR      shift, and go to state 55
    XOR     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    AND_OP  shift, and go to state 62
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70
    R_SK    shift, and go to state 77


State 38

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   37     | NOT expr .
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    $default  reduce using rule 37 (expr)


State 39

   64 compound_statement: '{' '}' .

    $default  reduce using rule 64 (compound_statement)


State 40

   66 statement_list: statement .

    $default  reduce using rule 66 (statement_list)


State 41

   65 compound_statement: '{' statement_list . '}'
   67 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14
    '}'         shift, and go to state 78

    $default  reduce using rule 59 ($@3)

    statement              go to state 79
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    return_statement       go to state 26


State 42

    9 assignment_operator: ASSIGN .

    $default  reduce using rule 9 (assignment_operator)


State 43

   14 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 14 (assignment_operator)


State 44

   15 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 15 (assignment_operator)


State 45

   10 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 10 (assignment_operator)


State 46

   11 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 11 (assignment_operator)


State 47

   12 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 12 (assignment_operator)


State 48

   13 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 13 (assignment_operator)


State 49

   16 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 16 (assignment_operator)


State 50

   17 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 17 (assignment_operator)


State 51

   18 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 18 (assignment_operator)


State 52

   19 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 19 (assignment_operator)


State 53

   23 assignment_expression: unary_expression assignment_operator . assignment_expression
   24                      | unary_expression assignment_operator . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression       go to state 16
    assignment_expression  go to state 80
    expr                   go to state 81


State 54

   34 expr: expr AND . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 82


State 55

   33 expr: expr OR . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 83


State 56

   32 expr: expr XOR . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 84


State 57

   28 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 85


State 58

   29 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 86


State 59

   26 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 87


State 60

   27 expr: expr SUB . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 88


State 61

   30 expr: expr MOD . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 89


State 62

   38 expr: expr AND_OP . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 90


State 63

   39 expr: expr LE_OP . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 91


State 64

   40 expr: expr GE_OP . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 92


State 65

   41 expr: expr LE_OP_ . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 93


State 66

   42 expr: expr GE_OP_ . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 94


State 67

   43 expr: expr EQ_OP . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 95


State 68

   44 expr: expr NE_OP . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 96


State 69

   36 expr: expr SHR . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 97


State 70

   35 expr: expr SHL . expr

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression  go to state 29
    expr              go to state 98


State 71

   52 expression_statement: expression ';' .

    $default  reduce using rule 52 (expression_statement)


State 72

   53 expression_statement: expression ',' . expression_statement

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13

    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 99


State 73

   62 iteration_statement: $@3 WHILE . $@4 L_SK expression $@5 R_SK statement

    $default  reduce using rule 60 ($@4)

    $@4  go to state 100


State 74

   55 selection_statement: IF L_SK expression . R_SK $@1 slc_stmnt

    R_SK  shift, and go to state 101


State 75

   69 return_statement: RETURN expression ';' .

    $default  reduce using rule 69 (return_statement)


State 76

   63 print_statement: PRINT expression ';' .

    $default  reduce using rule 63 (print_statement)


State 77

   25 expr: L_SK expr R_SK .

    $default  reduce using rule 25 (expr)


State 78

   65 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 65 (compound_statement)


State 79

   67 statement_list: statement_list statement .

    $default  reduce using rule 67 (statement_list)


State 80

   23 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 23 (assignment_expression)


State 81

   24 assignment_expression: unary_expression assignment_operator expr .
   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    AND     shift, and go to state 54
    OR      shift, and go to state 55
    XOR     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    AND_OP  shift, and go to state 62
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 24 (assignment_expression)


State 82

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   34     | expr AND expr .
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 34 (expr)


State 83

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   33     | expr OR expr .
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    AND     shift, and go to state 54
    XOR     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 33 (expr)


State 84

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   32     | expr XOR expr .
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    AND     shift, and go to state 54
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 32 (expr)


State 85

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   28     | expr MUL expr .
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    $default  reduce using rule 28 (expr)


State 86

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   29     | expr DIV expr .
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    $default  reduce using rule 29 (expr)


State 87

   26 expr: expr . ADD expr
   26     | expr ADD expr .
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    MOD  shift, and go to state 61

    $default  reduce using rule 26 (expr)


State 88

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   27     | expr SUB expr .
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    MOD  shift, and go to state 61

    $default  reduce using rule 27 (expr)


State 89

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   30     | expr MOD expr .
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    $default  reduce using rule 30 (expr)


State 90

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   38     | expr AND_OP expr .
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    AND     shift, and go to state 54
    OR      shift, and go to state 55
    XOR     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    EQ_OP   shift, and go to state 67
    NE_OP   shift, and go to state 68
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 38 (expr)


State 91

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   39     | expr LE_OP expr .
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61
    SHR  shift, and go to state 69
    SHL  shift, and go to state 70

    $default  reduce using rule 39 (expr)


State 92

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   40     | expr GE_OP expr .
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61
    SHR  shift, and go to state 69
    SHL  shift, and go to state 70

    $default  reduce using rule 40 (expr)


State 93

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   41     | expr LE_OP_ expr .
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61
    SHR  shift, and go to state 69
    SHL  shift, and go to state 70

    $default  reduce using rule 41 (expr)


State 94

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   42     | expr GE_OP_ expr .
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61
    SHR  shift, and go to state 69
    SHL  shift, and go to state 70

    $default  reduce using rule 42 (expr)


State 95

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   43     | expr EQ_OP expr .
   44     | expr . NE_OP expr

    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 43 (expr)


State 96

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr
   44     | expr NE_OP expr .

    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MOD     shift, and go to state 61
    LE_OP   shift, and go to state 63
    GE_OP   shift, and go to state 64
    LE_OP_  shift, and go to state 65
    GE_OP_  shift, and go to state 66
    SHR     shift, and go to state 69
    SHL     shift, and go to state 70

    $default  reduce using rule 44 (expr)


State 97

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   36     | expr . SHR expr
   36     | expr SHR expr .
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61

    $default  reduce using rule 36 (expr)


State 98

   26 expr: expr . ADD expr
   27     | expr . SUB expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . MOD expr
   32     | expr . XOR expr
   33     | expr . OR expr
   34     | expr . AND expr
   35     | expr . SHL expr
   35     | expr SHL expr .
   36     | expr . SHR expr
   38     | expr . AND_OP expr
   39     | expr . LE_OP expr
   40     | expr . GE_OP expr
   41     | expr . LE_OP_ expr
   42     | expr . GE_OP_ expr
   43     | expr . EQ_OP expr
   44     | expr . NE_OP expr

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MOD  shift, and go to state 61

    $default  reduce using rule 35 (expr)


State 99

   53 expression_statement: expression ',' expression_statement .

    $default  reduce using rule 53 (expression_statement)


State 100

   62 iteration_statement: $@3 WHILE $@4 . L_SK expression $@5 R_SK statement

    L_SK  shift, and go to state 102


State 101

   55 selection_statement: IF L_SK expression R_SK . $@1 slc_stmnt

    $default  reduce using rule 54 ($@1)

    $@1  go to state 103


State 102

   62 iteration_statement: $@3 WHILE $@4 L_SK . expression $@5 R_SK statement

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12

    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 104


State 103

   55 selection_statement: IF L_SK expression R_SK $@1 . slc_stmnt

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    $default  reduce using rule 59 ($@3)

    statement              go to state 105
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    slc_stmnt              go to state 106
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    return_statement       go to state 26


State 104

   62 iteration_statement: $@3 WHILE $@4 L_SK expression . $@5 R_SK statement

    $default  reduce using rule 61 ($@5)

    $@5  go to state 107


State 105

   56 slc_stmnt: statement .
   58          | statement . ELSE $@2 statement

    ELSE  shift, and go to state 108

    $default  reduce using rule 56 (slc_stmnt)


State 106

   55 selection_statement: IF L_SK expression R_SK $@1 slc_stmnt .

    $default  reduce using rule 55 (selection_statement)


State 107

   62 iteration_statement: $@3 WHILE $@4 L_SK expression $@5 . R_SK statement

    R_SK  shift, and go to state 109


State 108

   58 slc_stmnt: statement ELSE . $@2 statement

    $default  reduce using rule 57 ($@2)

    $@2  go to state 110


State 109

   62 iteration_statement: $@3 WHILE $@4 L_SK expression $@5 R_SK . statement

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    $default  reduce using rule 59 ($@3)

    statement              go to state 111
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    return_statement       go to state 26


State 110

   58 slc_stmnt: statement ELSE $@2 . statement

    IDENTIFIER  shift, and go to state 3
    CONST       shift, and go to state 4
    SUB         shift, and go to state 5
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    IF          shift, and go to state 8
    RETURN      shift, and go to state 9
    PRINT       shift, and go to state 10
    L_SK        shift, and go to state 11
    NOT         shift, and go to state 12
    ';'         shift, and go to state 13
    '{'         shift, and go to state 14

    $default  reduce using rule 59 ($@3)

    statement              go to state 112
    unary_expression       go to state 16
    assignment_expression  go to state 17
    expr                   go to state 18
    expression             go to state 19
    expression_statement   go to state 20
    selection_statement    go to state 21
    iteration_statement    go to state 22
    $@3                    go to state 23
    print_statement        go to state 24
    compound_statement     go to state 25
    return_statement       go to state 26


State 111

   62 iteration_statement: $@3 WHILE $@4 L_SK expression $@5 R_SK statement .

    $default  reduce using rule 62 (iteration_statement)


State 112

   58 slc_stmnt: statement ELSE $@2 statement .

    $default  reduce using rule 58 (slc_stmnt)
